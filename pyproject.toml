[project]
requires-python = ">=3.6"
dependencies = [
    "numpy >= 1.19.4; python_version < '3.10'",
    "numpy >= 1.21.2; python_version >= '3.10'",
    "Pillow",
]

[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "cmake == 3.21.1",
    "numpy == 1.19.4; python_version < '3.10'",
    "numpy == 1.21.3; python_version >= '3.10'",
    "conan",
    "ninja",
    ]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]

build-verbosity = "1"

# test
test-requires = "pytest"
test-command = "pytest --exitfirst --verbose --failed-first {package}/tests"


[tool.cibuildwheel.linux]
before-all = [
    # Has eigen3-devel.aarch64
    "yum install -y epel-release",
    "yum install -y wget freetype-devel zlib-devel libpng12-devel pixman-devel eigen3-devel cairo-devel",
]

repair-wheel-command = [
    # for boost libs
    'source conan/activate_run.sh',
    'auditwheel repair -w {dest_dir} {wheel}'
]

[tool.cibuildwheel.macos]
before-all = [
    "brew install cairo eigen gnu-sed",
    ]


repair-wheel-command = [
    "export DYLD_LIBRARY_PATH='/usr/local/lib:/usr/lib'",
    "source conan/activate_run.sh",
    "delocate-listdeps {wheel}",
    "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.windows]

before-build = [
    "pip install delvewheel",
]

environment = { TMP='C:\\temp', TEMP='C:\\temp', RUNNER_TEMP='C:\\temp'}
repair-wheel-command = [
    "C:\\rdkit\\conan\\activate_run.bat",
    "delvewheel show -v --add-path C:\\libs;C:\\vcpkg\\installed\\x64-windows\\bin {wheel}",
    "delvewheel repair -v --add-path C:\\libs;C:\\vcpkg\\installed\\x64-windows\\bin -w {dest_dir} {wheel}"
    ]
