[build-system]
requires = [
    "setuptools==69.2.0",
    "wheel",
    "cmake == 3.26.4",
    "numpy",
    "conan == 1.64.0",
    "ninja",
    "pybind11-stubgen",
    "Pillow",  # required for building the stubs
    ]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]

build-verbosity = "1"
# build-frontend = { name = "build[uv]"}
# test
test-requires = "pytest"
test-command = "pytest --exitfirst --verbose --failed-first {package}/tests"
# test-skip = "*-win_amd64"


manylinux-x86_64-image = "quay.io/pypa/manylinux_2_28_x86_64:latest"
manylinux-aarch64-image = "quay.io/pypa/manylinux_2_28_aarch64:latest"


[tool.cibuildwheel.linux]
before-all = [
    "yum update -y",
    "yum install freetype-devel libpng-devel pixman-devel zlib-devel eigen3-devel cairo-devel -y"
]

repair-wheel-command = [
    # for boost libs
    'source conan/conanrun.sh',
    'auditwheel repair -w {dest_dir} {wheel}'
]

environment-pass = ["CIBW_BUILD"]

[tool.cibuildwheel.macos]

before-all = ["brew install gnu-sed eigen cairo freetype"]

repair-wheel-command = [
    "export DYLD_LIBRARY_PATH='/usr/local/lib:/usr/lib:/Users/admin/lib:/Users/runner/work/lib'",
    "source conan/conanrun.sh",
    "delocate-listdeps {wheel}",
    "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.windows]

before-build = [
    "pip install delvewheel",
]

environment = { TMP='C:\\temp', TEMP='C:\\temp', RUNNER_TEMP='C:\\temp'}
repair-wheel-command = [
    "C:\\rdkit\\conan\\conanrun.bat",
    "delvewheel show -v --add-path C:\\libs;C:\\rdkit\\vcpkg_installed\\x64-windows\\bin {wheel}",
    "delvewheel repair -v --add-path C:\\libs;C:\\rdkit\\vcpkg_installed\\x64-windows\\bin -w {dest_dir} {wheel}"
    ]
