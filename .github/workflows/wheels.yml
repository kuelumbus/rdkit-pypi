
name: Build wheels

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
  

permissions: 
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  PYTHONUNBUFFERED: "1"


jobs:
  build_wheels:
    name: Build for cp${{ matrix.python }}-${{ matrix.platform_id }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Window 64 bit
          - os: windows-2019
            python: 38
            bitness: 64
            platform_id: win_amd64
          - os: windows-2019
            python: 39
            bitness: 64
            platform_id: win_amd64
          - os: windows-2019
            python: 310
            bitness: 64
            platform_id: win_amd64
          - os: windows-2019
            python: 311
            bitness: 64
            platform_id: win_amd64
          - os: windows-2019
            python: 312
            bitness: 64
            platform_id: win_amd64


          # Linux 64 bit Intel: x86_64
          - os: ubuntu-latest
            python: 38
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 311
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 312
            bitness: 64
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # Linux 64 bit ARM: aarch64 (on Circle CI)

          # MacOS 64 bit Intel: x86_64
          - os: macos-12
            bitness: 64
            python: 38
            platform_id: macosx_x86_64
          - os: macos-12
            bitness: 64
            python: 39
            platform_id: macosx_x86_64
          - os: macos-12
            bitness: 64
            python: 310
            platform_id: macosx_x86_64
          - os: macos-12
            bitness: 64
            python: 311
            platform_id: macosx_x86_64
          - os: macos-12
            bitness: 64
            python: 312
            platform_id: macosx_x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Copy to C:\
        if: ${{ runner.os == 'Windows' }}
        run: |
          Copy-Item -Path D:\a\rdkit-pypi\rdkit-pypi -Destination C:\rdkit -Recurse

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.11'
      
      - name: Export GitHub Actions cache environment variables for vcpkg
        if: ${{ runner.os == 'Windows' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      
      - name: Install libraries with vcpkg
        if: ${{ runner.os == 'Windows' }}
        run: |
          cd C:\\rdkit
          vcpkg --triplet x64-windows install

      - name: Install libraries with chocolatey
        if: ${{ runner.os == 'Windows' }}
        run: |
          choco install sed
          choco install pkgconfiglite --allow-empty-checksums
        shell: pwsh

      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}

        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            cd C:\\rdkit
            echo "C:\\libs" >> $GITHUB_PATH
          fi
          python -m pip install cibuildwheel==2.17.0
          python -m cibuildwheel --output-dir wheelhouse
        shell: bash

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'Windows' }}
        with:
          name: cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ strategy.job-index }}
          path: C:\rdkit\wheelhouse\*.whl

      - uses: actions/upload-artifact@v4
        if: ${{ runner.os != 'Windows' }}
        with:
          name: cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
      

